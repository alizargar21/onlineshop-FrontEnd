{"version":3,"file":"static/js/340.11cf63c1.chunk.js","mappings":"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","sources":["components/SingleProduct/SingleProduct.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { BsHeartFill, BsStarFill, BsHeart, BsShare } from \"react-icons/bs\";\r\nimport { toast } from \"react-toastify\";\r\nimport { addToFavoriteList } from \"../../features/FavoriteSlice/FavoriteSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../../features/CartSlice/CartSlice\";\r\nconst SingleProduct = ({ selectedProduct }) => {\r\n  const [chooseColor, setChooseColor] = useState(false);\r\n  const [cartItem , setCartItem ] = useState({})\r\n  const { favoriteList } = useSelector((state) => state.favorite);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(selectedProduct.selectedColor);\r\n  }, []);\r\n  const handleAddToCart = () => {\r\n    console.log(\"worked\")\r\n    dispatch(addToCart(cartItem));\r\n    toast.success(\"Added To Cart\");\r\n  };\r\n  const handleSelectColor = (value) => {\r\n    setChooseColor(true);\r\n    const item = {...selectedProduct , selectedColor : value}\r\n    setCartItem(item)\r\n    console.log(item)\r\n  };\r\n  return (\r\n    <>\r\n      { (\r\n        <section className=\"w-[90%] h-auto mx-auto flex justify-between  my-12  md:flex-col\">\r\n          <aside className=\"flex flex-col 2xl:sticky top-20 md:static w-[40%] text-gray-800 dark:text-gray-200  bg-white/60 dark:bg-black/30 items-center h-[80%]  rounded-md my-2 p-4 md:w-[90%] md:h-[70%] sm:min-h-[500px] mx-auto\">\r\n            <h2 className=\"text-xl mt-2 sm:text-lg \">{selectedProduct.name}</h2>\r\n            <div className=\"w-full h-full center\">\r\n              <img\r\n                src={selectedProduct.image}\r\n                className=\"w-[70%] mx-auto h-[90%] md:h-[80%] md:w-[80%] sm:w-[80%] sm:h-full hover:scale-105 duration-300\"\r\n              />\r\n            </div>\r\n            <div\r\n              className={\r\n                selectedProduct.discount !== 0\r\n                  ? \" text-3xl xl:text-3xl flex justify-evenly w-full items-center font-Roboto\"\r\n                  : \"font-bold text-3xl xl:text-3xl w-full center font-Roboto\"\r\n              }\r\n            >\r\n              <div className=\"center \">\r\n                {selectedProduct.discount === 0 ? (\r\n                  <p className=\"mt-2\">$ {selectedProduct.price}</p>\r\n                ) : (\r\n                  <>\r\n                    <p className=\"line-through opacity-80\">\r\n                      $ {selectedProduct.price}\r\n                    </p>\r\n                    <span className=\"text-xs center w-7 h-5 bg-red-600 text-white rounded-full rounded-tr-none mx-2\">\r\n                      %{selectedProduct.discount}\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div>\r\n                {selectedProduct.discount !== 0 && (\r\n                  <p className=\"text-green-500 \">\r\n                    $\r\n                    {selectedProduct.price -\r\n                      (selectedProduct.price * selectedProduct.discount) / 100}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"flex  w-full  sm:flex flex-col\">\r\n              <div className=\"w-full h-[90px] center\">\r\n                <p> Colors </p>\r\n                {selectedProduct &&\r\n                  selectedProduct.colors.map((item, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"border-gray-900  py-3\"\r\n                      onChange={() => handleSelectColor(item)}\r\n                    >\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"color\"\r\n                        className=\"chooseColor dark:border dark:border-white checked:w-7 checked:h-7 duration-300 m-1 cursor-pointer\"\r\n                        style={{ backgroundColor: Object.values(item) }}\r\n                        value={item}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                <div className=\"center\">\r\n                  <BsStarFill className=\"mx-1 text-yellow-400\" />\r\n                  {selectedProduct.rate}\r\n                  <button type=\"button\" className=\"text-red-500  ml-4 text-xl \">\r\n                    {favoriteList.findIndex(\r\n                      (favItem) => favItem._id === selectedProduct._id\r\n                    ) > -1 || null ? (\r\n                      <BsHeartFill\r\n                        onClick={() =>\r\n                          dispatch(addToFavoriteList(selectedProduct))\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      <BsHeart\r\n                        onClick={() =>\r\n                          dispatch(addToFavoriteList(selectedProduct))\r\n                        }\r\n                      />\r\n                    )}\r\n                  </button>\r\n                  <button>\r\n                    <BsShare className=\"mx-3\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\" center  sm:mx-auto w-full  \">\r\n                <button\r\n                  className=\"btn-primary w-full md:w-[70%] sm:w-full\"\r\n                  disabled={chooseColor === false}\r\n                  onClick={handleAddToCart}\r\n                >\r\n                  {chooseColor ? \"Add To Cart\" : \"Select Color\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n          <article className=\"center flex-col justify-start w-[60%] md:w-full text-gray-800 dark:text-gray-200\">\r\n            <h3 className=\"my-3 text-center text-3xl\">\r\n              {selectedProduct.name}\r\n            </h3>\r\n\r\n            <div className=\"w-full\">\r\n              <div className=\"center flex-col divide-y divide-gray-800 dark:divide-gray-200\">\r\n                {selectedProduct &&\r\n                  selectedProduct.attributes.map((item, index) => (\r\n                    <div\r\n                      className=\"w-[90%] flex justify-between font-mono\"\r\n                      key={index}\r\n                    >\r\n                      <p className=\"\">{Object.keys(item)} :</p>\r\n                      <p className=\"\">{Object.values(item)}</p>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n            <article className=\"w-[90%] mx-auto my-5 text-justify text-gray-800 dark:text-gray-200\">\r\n              <h2 className=\"text-center text-3xl my-6\">Introduction</h2>\r\n              <p>{selectedProduct.introduction}</p>\r\n            </article>\r\n          </article>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n\r\n// {(\r\n//   <section className=\"w-[90%] h-auto mx-auto flex justify-between  my-12  md:flex-col\">\r\n//     <aside className=\"flex flex-col 2xl:sticky top-20 md:static w-[40%] text-gray-800 dark:text-gray-200  bg-white/60 dark:bg-black/30 items-center h-[80%]  rounded-md my-2 p-4 md:w-[90%] md:h-[70%] sm:min-h-[500px] mx-auto\">\r\n//       <h2 className=\"text-xl mt-2 sm:text-lg \">{product.name}</h2>\r\n//       <div className=\"w-full h-full center\">\r\n//         <img\r\n//           src={product.image}\r\n//           className=\"w-[70%] mx-auto h-[90%] md:h-[80%] md:w-[80%] sm:w-[80%] sm:h-full hover:scale-105 duration-300\"\r\n//         />\r\n//       </div>\r\n//       <div\r\n//         className={\r\n//           product.discount !== 0\r\n//             ? \" text-3xl xl:text-3xl flex justify-evenly w-full items-center font-Roboto\"\r\n//             : \"font-bold text-3xl xl:text-3xl w-full center font-Roboto\"\r\n//         }\r\n//       >\r\n//         <div className=\"center \">\r\n//           {product.discount === 0 ? (\r\n//             <p className=\"mt-2\">$ {product.price}</p>\r\n//           ) : (\r\n//             <>\r\n//               <p className=\"line-through opacity-80\">\r\n//                 $ {product.price}\r\n//               </p>\r\n//               <span className=\"text-xs center w-7 h-5 bg-red-600 text-white rounded-full rounded-tr-none mx-2\">\r\n//                 %{product.discount}\r\n//               </span>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//         <div>\r\n//           {product.discount !== 0 && (\r\n//             <p className=\"text-green-500 \">\r\n\r\n//               {product.price -\r\n//                 (product.price * product.discount) / 100}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"flex  w-full  sm:flex flex-col\">\r\n//         <div className=\"w-full h-[90px] center\">\r\n//           <p> Colors :</p>\r\n//           {product.colors.map((item, index) => (\r\n//             <div\r\n//               key={index}\r\n//               className=\"border-gray-900  py-3\"\r\n//               onChange={() => handleSelectColor(item)}\r\n//             >\r\n//               <input\r\n//                 type=\"radio\"\r\n//                 name=\"color\"\r\n//                 className=\"chooseColor dark:border dark:border-white checked:w-7 checked:h-7 duration-300 m-1 cursor-pointer\"\r\n//                 style={{ backgroundColor: Object.values(item) }}\r\n//                 value={item}\r\n//               />\r\n//             </div>\r\n//           ))}\r\n//           <div className=\"center\">\r\n//             <BsStarFill className=\"mx-1 text-yellow-400\" />\r\n//             {product.rate}\r\n//             <button type=\"button\" className=\"text-red-500  ml-4 text-xl \">\r\n//               {favoriteList.findIndex(\r\n//                 (favItem) => favItem._id === product._id\r\n//               ) > -1 || null ? (\r\n//                 <BsHeartFill\r\n//                   onClick={() =>\r\n//                     dispatch(addToFavoriteList(product))\r\n//                   }\r\n//                 />\r\n//               ) : (\r\n//                 <BsHeart\r\n//                   onClick={() =>\r\n//                     dispatch(addToFavoriteList(product))\r\n//                   }\r\n//                 />\r\n//               )}\r\n//             </button>\r\n//             <button>\r\n//               <BsShare className=\"mx-3\" />\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\" center  sm:mx-auto w-full  \">\r\n//           <button\r\n//             className=\"btn-primary w-full md:w-[70%] sm:w-full\"\r\n//             disabled={product.selectedColor === undefined}\r\n//             onClick={() => handleAddToCart()}\r\n//           >\r\n//             {chooseColor ? \"Add To Cart\" : \"Select Color\"}\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n//     </aside>\r\n//     <article className=\"center flex-col justify-start w-[60%] md:w-full text-gray-800 dark:text-gray-200\">\r\n//       <h3 className=\"my-3 text-center text-3xl\">\r\n//         {product.name}\r\n//       </h3>\r\n\r\n//       <div className=\"w-full\">\r\n//         <div className=\"center flex-col divide-y divide-gray-800 dark:divide-gray-200\">\r\n//           {product.attributes.map((item, index) => (\r\n//             <div\r\n//               className=\"w-[90%] flex justify-between font-mono\"\r\n//               key={index}\r\n//             >\r\n//               <p className=\"\">{Object.keys(item)} :</p>\r\n//               <p className=\"\">{Object.values(item)}</p>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//       <article className=\"w-[90%] mx-auto my-5 text-justify text-gray-800 dark:text-gray-200\">\r\n//         <h2 className=\"text-center text-3xl my-6\">Introduction</h2>\r\n//         <p>{product.introduction}</p>\r\n//       </article>\r\n//     </article>\r\n//   </section>\r\n// ) }\r\n"],"names":["selectedProduct","useState","chooseColor","setChooseColor","cartItem","setCartItem","favoriteList","useSelector","state","favorite","dispatch","useDispatch","useEffect","console","log","selectedColor","className","name","src","image","discount","price","colors","map","item","index","onChange","value","handleSelectColor","type","style","backgroundColor","Object","values","rate","findIndex","favItem","_id","onClick","addToFavoriteList","disabled","addToCart","toast","attributes","keys","introduction"],"sourceRoot":""}